<template>
    <div class="page" data-name="cuestionario-despedida">
        <div class="navbar">
            <div class="navbar-bg"></div>
            <div class="navbar-inner sliding">
                <div class="left">
                    <a href="/" class="link">
                        <i class="icon icon-back"></i>
                    </a>
                </div>
                <div class="title">ðŸ‘Š Â¡Ey! Bro... Â¡Gracias!</div>
            </div>
        </div>
        <div class="page-content">
            <div class="display-flex justify-content-space-between align-items-flex-start">
                <div class="flex-shrink-0"></div>
                <div class="align-self-center content-box-wrap">
                    <div class="block block-strong">
                        <div class="block block-strong">
                            <div class="card">
                                <div class="card-content card-content-padding text-align-justify">
                                    <h2>${cuestionario.value.mensaje_despedida}</h2>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="align-self-flex-end"></div>
            </div>
        </div>
    </div>
</template>
<script>
    export default (props, { $, $f7, $f7router, $store, $on, $update }) => {
        const cuestionario = $store.getters.cuestionario;
        const visitante = $store.getters.visitante;
        const config = $f7.config;

        const sendEmail = () => {
            return new Promise(function (resolve, reject) {
                // API Endpoint
                let api_url = config.api_url;
                let request_url = `${api_url}/SendEmail`;

                $f7.request({
                    url: request_url,
                    method: 'POST',
                    contentType: 'application/x-www-form-urlencoded',
                    dataType: 'json',
                    data: {
                        visitante_id: visitante.value.id_visitante,
                        token: visitante.value.uuid
                    }
                }).then((response) => {
                    console.log(`[+] Se enviÃ³ el callback para preparar el correo electrÃ³nico ${request_url}`);
                    let data = response.data;
                    console.log(data);
                    resolve(data);
                }).catch((err) => {
                    console.error(err);
                    reject(err);
                });
            });
        };

        $on('pageInit', (e, page) => {
            // Se borra el visitante
            sendEmail().then(() => {
                console.log(`[+] Visitante borrado y correo enviado.`);
                $store.dispatch('setVisitante', {});
            }).catch((err) => {
                console.error(err);
                console.log(`[+] Visitante borrado y correo NO enviado.`);
                $store.dispatch('setVisitante', {});
            });
        });

        return $render;
    };
</script>