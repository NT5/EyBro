<template>
    <div class="page" data-name="cuestionario">
        <div class="navbar">
            <div class="navbar-bg"></div>
            <div class="navbar-inner sliding">
                <div class="left">
                    <a href="/" class="link">
                        <i class="icon icon-back"></i>
                    </a>
                </div>
                <div class="title">ðŸ‘Š Â¡Ey! Bro...</div>
            </div>
        </div>
        <div class="page-content">
            <div class="display-flex justify-content-space-between align-items-flex-start">
                <div class="flex-shrink-0"></div>
                <div class="align-self-center content-box-wrap">
                    <!-- Card de pregunta -->
                    <div class="block block-strong">
                        <div class="card">
                            <div class="card-content card-content-padding text-align-center">
                                <div class="row">
                                    <div class="col">
                                        <h1>${pregunta.pregunta_texto}</h1>
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="col">
                                        <div class="list">
                                            <ul>
                                                ${pregunta.posibles_respuestas.map((item) => $h`
                                                <li>
                                                    <label class="item-radio item-content item-input-with-info">
                                                        <input type="radio" name="radio" value="-1" />
                                                        <i class="icon icon-radio"></i>
                                                        <div class="item-inner">
                                                            <div
                                                                class="item-input-info text-align-left text-color-white">
                                                                <p style="font-size: 1.5em;">
                                                                    ${item.respuesta_texto}
                                                                </p>
                                                            </div>
                                                        </div>
                                                    </label>
                                                </li>
                                                `)}
                                            </ul>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <!-- Fin -->

                    <!-- Botones -->
                    <div class="row block">
                        <div class="col">
                            <button @click=${siguientePregunta} class="button button-large button-fill">
                                <i class="icon material-icons">play_arrow</i> Siguiente >>>
                            </button>
                        </div>
                    </div>
                    <div class="row block">
                        <div class="col">
                            <a href="#" class="button button-large button-fill color-red" @click=${salirAInicio}>
                                <i class="icon material-icons">close</i> Salir
                            </a>
                        </div>
                    </div>
                    <!-- Fin botones -->
                </div>
                <div class="align-self-flex-end"></div>
            </div>

            <!-- Popup -->
            <div class="popup" id="mensaje-pregunta">
                <div class="view">
                    <div class="page">
                        <div class="navbar">
                            <div class="navbar-bg"></div>
                            <div class="navbar-inner">
                                <div class="title"><i class="icon material-icons">info</i></div>
                                <div class="right">
                                    <a href="#" class="link popup-close"><i class="icon material-icons">close</i></a>
                                </div>
                            </div>
                        </div>
                        <div class="toolbar toolbar-bottom">
                            <div class="toolbar-inner">
                                <a href="#" class="button button-large button-fill popup-close">
                                    <i class="icon material-icons">close</i>Salir
                                </a>
                            </div>
                        </div>
                        <div class="page-content text-align-center">
                            <div class="block">
                                <h2>${pregunta.mensaje}</h2>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <!-- Fin Popup -->
        </div>
    </div>
</template>
<script>
    export default (props, { $, $f7, $f7router, $store, $on, $update }) => {
        const config = $f7.config;

        const cuestionario_id = props.id_cuestionario;
        const pregunta_id = props.id_pregunta;

        const pregunta_actual = $store.getters.pregunta_actual;
        const visitante = $store.getters.visitante;
        const store_cuestionario = $store.getters.cuestionario;

        let pregunta = {
            id_cuestionario: -1,
            id_pregunta: -1,
            pregunta_texto: '...',
            posibles_respuestas: [
                {
                    id_pregunta: -1,
                    id_respuesta: -1,
                    respuesta_texto: "..."
                }
            ]
        };

        // Carga la pregunta segÃºn un cuestionario y pregunta
        const cargarPregunta = (cuestionario_id, pregunta_id) => {
            // API Endpoint
            let api_url = config.api_url;
            let request_url = `${api_url}/preguntas/getPreguntaFromId`;

            $f7.request({
                url: request_url,
                method: 'POST',
                contentType: 'application/x-www-form-urlencoded',
                dataType: 'json',
                data: {
                    cuestionario_id: cuestionario_id,
                    pregunta_id: pregunta_id
                }
            }).then((response) => {
                console.log(`[+] Datos cargados ${request_url}`);
                let json = response.data.pregunta;

                // Variable global de la pagina
                pregunta = json;
                console.log(pregunta);
                $update();
                if (pregunta.mensaje) {
                    console.log(`[+] La pregunta tiene un mensaje, abriendo popup`);
                    $f7.popup.open('#mensaje-pregunta');
                }
            });
        };

        const responderPregunta = (respuesta_id) => {
            let visitante_id = parseInt(visitante.value.id_visitante);

            // API Endpoint
            let api_url = config.api_url;
            let request_url = `${api_url}/preguntas/registreNuevaRespuesta`;

            $f7.request({
                url: request_url,
                method: 'POST',
                contentType: 'application/x-www-form-urlencoded',
                dataType: 'json',
                data: {
                    id_visitante: visitante_id,
                    cuestionario_id: cuestionario_id,
                    id_pregunta: pregunta_id,
                    id_respuesta: respuesta_id
                }
            }).then((response) => {
                console.log(`[+] Pregunta respondida en el servidor ${request_url}`);
                let data = response.data;
                console.log(data);
            });
        };

        const salirAInicio = (props, context) => {
            $f7.dialog.confirm(`Seguro que quieres salir?`, function () {
                $f7router.navigate('/');
                // Se borra el visitante
                $store.dispatch('setVisitante', {});
            });
        };

        const siguientePregunta = (props, context) => {
            let respuesta_pregunta = $('input[name=radio]:checked').val();
            if (!respuesta_pregunta) {
                $f7.dialog.alert(`Por favor responde la pregunta para continuar.`);
                return;
            }

            responderPregunta(respuesta_pregunta);

            console.log(`[?] Pregunta respondida: ${respuesta_pregunta}`);

            let siguiente_pregunta = $store.getters.pregunta_siguiente.value;

            console.log(`Siguiente pregunta`, siguiente_pregunta);
            if (!siguiente_pregunta) {
                $f7.dialog.alert(`Gracias por responder mis preguntas! ðŸ™Œ tu respuesta serÃ¡n de gran ayuda`);
                $f7router.navigate({
                    name: 'cuestionario-despedida'
                });
            } else {
                $store.dispatch('setPreguntaActual', siguiente_pregunta);
                $f7router.navigate({
                    name: 'pregunta-cuestionario',
                    params: {
                        id_cuestionario: cuestionario_id,
                        id_pregunta: siguiente_pregunta.id_pregunta
                    },
                });
            }
        };

        $on('pageInit', (e, page) => {
            console.log(`[+] Cargando pregunta: [Cuestionario: ${cuestionario_id} | Pregunta: ${pregunta_id}]`);

            // Se remueven los elementos del radio que estÃ©n clickeados
            $('input[name=radio]:checked').prop('checked', false);

            // Se cargan los datos de la pregunta desde el servidor
            cargarPregunta(cuestionario_id, pregunta_id);
        });

        return $render;
    };
</script>